Contributing
============
Contributions to this project are welcome. In order to ensure that your contributions are usable, please follow the guidelines below.

Branching Model
---------------

This project uses the branching model from Vincent Driessen's [aptly-titled post](http://nvie.com/posts/a-successful-git-branching-model/). If you are not familiar with branching in git, please read the article and look at the pretty diagrams before contributing; it's a great model that works really well.

The basic rules are:

 - There are two primary long-life branches: `develop` and `master`
   - No commit to `master` or `develop` breaks the build. _Ever_.
   - Every commit to `master` is a release; _never_ commit directly to master.
 - Support branches are used liberally; every _feature_, _release_, or _hotfix_ gets its own branch.
   - Feature branches are based on `develop` and merged back into `develop` when complete.
   - Release branches are based on `develop` and merged back into `develop` as needed and `master` when complete
   - Hotfix branches are based on `master` and merged back into `develop` and `master` when complete.
 - Commit History is preserved as much as possible; use the `--no-ff` flag to keep commit history when merging.

Code Guidelines
---------------

 - Keep it readable.
   - Use whitespace liberally.
   - Use variable names that make sense, even if that means they have to be verbose.
 - Comment where appropriate; if logic is hard to follow, especially in one-line chains, use comments.